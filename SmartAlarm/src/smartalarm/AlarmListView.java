/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package smartalarm;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;


/**
 *
 * @author Melissa
 */
public class AlarmListView extends javax.swing.JFrame {

    private ArrayList<Alarm> AlarmsR;
    private boolean deleteEnabled;
    File AlarmFile = new File("AlarmData.txt");
    
    public AlarmListView(ArrayList<Alarm> Alarms) {
        initComponents();
        AlarmsR = Alarms;
        ConvertAlarmsForView();
        TableColumn column = null;
        for (int i = 0; i < 2; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(350); 
            } else {
                column.setPreferredWidth(50);
            }
        }    
        deleteEnabled = false;
       jTable1.getModel().addTableModelListener(new MyTableListener());
    }
    
    /*public void setAlarmView(ArrayList<Alarm> Alarms){
        AlarmsR = Alarms;
        ConvertAlarmsForView();
        jTable1.getModel().addTableModelListener(new MyTableListener());
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        DeleteButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setTitle("List of Alarms");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        DeleteButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alarms", "Enabled"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCellSelectionEnabled(true);
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(DeleteButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteButton)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private class MyTableListener implements TableModelListener{
        
        @Override
        public void tableChanged(TableModelEvent e) {
            if(!deleteEnabled){
                int row = e.getFirstRow();
                int column = e.getColumn();
                TableModel model = (TableModel)e.getSource();
                Object data = model.getValueAt(row, column);
                boolean checked = Boolean.parseBoolean(data.toString());
                AlarmsR.get(row).setenabled(checked);
            }
            deleteEnabled = false;
        
          
        }
        
    }
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        deleteEnabled = true;
        int [] deleted = jTable1.getSelectedRows();
        TableModel model = jTable1.getModel();
         DefaultTableModel model2 = (DefaultTableModel)model;
        for(int i =0; i< deleted.length; i++){
            model2.removeRow(deleted[i]);
            AlarmsR.remove(deleted[i]);      
        }
        
    }//GEN-LAST:event_DeleteButtonActionPerformed
    private void ConvertAlarmsForView(){
         TableModel model = jTable1.getModel();
         DefaultTableModel model2 = (DefaultTableModel)model;
         clearalarmfile();
        for(int i=0; i< AlarmsR.size(); i++){
            Alarm alarm = AlarmsR.get(i).getAlarm();
            ArrayList<String>D = alarm.getDays();
            String Days="";
            for(int t=0; t<D.size(); t++){
                Days = D.get(t) + " "+ Days; 
            }
            String stralarm = "Alarm Name: " + alarm.getAlarmName()+ "  Time: " + alarm.getTime()+ " Days: " + Days;
            String fileinfo = alarm.getAlarmName() + "," + alarm.getTime() + ","+ Days + ","+ alarm.getTone() + "," + alarm.getRepeat() + ","+alarm.getEnabled();
            updatealarms(fileinfo);
            model2.addRow(new Object[]{stralarm, AlarmsR.get(i).getAlarm().getEnabled()});
        }
        jTable1.setModel(model2);
    }
    private void clearalarmfile(){
        if(AlarmFile.exists()){
                  AlarmFile.delete();
          }
         try {
             AlarmFile.createNewFile();
         } catch (IOException ex) {
             Logger.getLogger(Weather.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    private void updatealarms(String alarmdata){
         
        try { 
                FileWriter writer = new FileWriter(AlarmFile,true);
                writer.write(alarmdata+ System.getProperty("line.separator"));
                writer.flush();
                writer.close();
                
        } catch (IOException ex) {
            Logger.getLogger(AlarmListView.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    
    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/*        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlarmListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlarmListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlarmListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlarmListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlarmListView().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
